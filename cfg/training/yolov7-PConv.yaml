# !!!!!!!!!!!!!!!!!!!!!! yolov7-PConv.yaml
# parameters
nc: 1  # number of classes
depth_multiple: 1.0  # model depth multiple
width_multiple: 1.0  # layer channel multiple

# anchors
anchors:
  - [ 14.39,13.33, 27.20,26.67, 35.56,45.63 ]  # P3/8
  - [ 61.44,45.78, 55.75,76.8, 90.88,76.8 ]  # P4/16
  - [ 80.64,126.35, 120.89,150.26, 184.31,221.44 ]  # P5/32

#anchors: [[16,19], [55,65], [178,192]]

# yolov7 backbone
backbone:
  # [from, number, module, args]
  [[-1, 1, Conv, [32, 3, 1]],  # 0           [32,3,1]--------32:输出通道数为32  3：卷积核尺寸为3 1：步长为1

   [-1, 1, Conv, [64, 3, 2]],  # 1-P1/2    1       Conv 就是卷积+BN+激活模块 所有模块在common.py中有定义
   [-1, 1, Conv, [64, 3, 1]],   # 2
                                                    #  layer1==15行-18行
   [-1, 1, Conv, [128, 3, 2]],  # 3-P2/4     3                  24-26为ELAN模块
   [-1, 1, Conv, [64, 1, 1]],       #        4     [-1, 1, Conv, [64, 1, 1]],
   [-2, 1, Conv, [64, 1, 1]],        #       5
   [-1, 1, PConv, [64]],                 #     6
   [-1, 1, PConv, [64]],                 #     7
   [-1, 1, PConv, [64]],                 #      8
   [-1, 1, PConv, [64]],                  #          9
   [[-1, -3, -5, -6], 1, Concat [1]],       #          10
   [-1, 1, Conv, [256, 1, 1]],  # 11                        22-31是一个ELAN

       #MPConv  34-38
   [-1, 1, MP, []],                         #   12   MP-1  maxpooling(MP)   实现空间降采样
   [-1, 1, Conv, [128, 1, 1]],                   #  13
   [-3, 1, Conv, [128, 1, 1]],                 #     14
   [-1, 1, Conv, [128, 3, 2]],                 #   15
   [[-1, -3], 1, Concat, [1]],  # 16-P3/8          16            34-38 是一个MP1   复杂版最大池化层
   [-1, 1, Conv, [128, 1, 1]],           #    17       35-42是ELAN模块   对空间降采样的特征图进行处理
   [-2, 1, Conv, [128, 1, 1]],            # 18
   [-1, 1, PConv, [128]],             #      19
   [-1, 1, PConv, [128]],             #    20
   [-1, 1, PConv, [128]],           #       21
   [-1, 1, PConv, [128]],           #      22
   [[-1, -3, -5, -6], 1, Concat, [1]],         # 23
   [-1, 1, Conv, [512, 1, 1]],  # 24        c3         39-46是一个ELAN      ATT

   [-1, 1, MP, []],                     #25
   [-1, 1, Conv, [256, 1, 1]],        #26
   [-3, 1, Conv, [256, 1, 1]],            #27
   [-1, 1, Conv, [256, 3, 2]],         #28
   [[-1, -3], 1, Concat, [1]],  # 29-P4/16    29          48-52 MP1
   [-1, 1, Conv, [256, 1, 1]],      #30
   [-2, 1, Conv, [256, 1, 1]],         #31
   [-1, 1, PConv, [256]],          #32
   [-1, 1, PConv, [256]],         #33
   [-1, 1, PConv, [256]],         #34
   [-1, 1, PConv, [256]],             #35
   [[-1, -3, -5, -6], 1, Concat, [1]],       #36
   [-1, 1, Conv, [1024, 1, 1]],  # 37         c4         ATT       53-60 ELAN


   [-1, 1, MP, []],                  #38
   [-1, 1, Conv, [512, 1, 1]],       #39
   [-3, 1, Conv, [512, 1, 1]],        #40
   [-1, 1, Conv, [512, 3, 2]],       #41
   [[-1, -3], 1, Concat, [1]],  # 42-P5/32         42
   [-1, 1, Conv, [256, 1, 1]],    #43
   [-2, 1, Conv, [256, 1, 1]],      #44
   [-1, 1, PConv, [256]],            #45
   [-1, 1, PConv, [256]],         #46
   [-1, 1, PConv, [256]],      #47
   [-1, 1, PConv, [256]],        #48
   [[-1, -3, -5, -6], 1, Concat, [1]],        #49
   [-1, 1, Conv, [1024, 1, 1]],  # 50          c5
  ]

# yolov7 head
head:
  [[-1, 1, SPPCSPC, [512]], # 51

   [-1, 1, Conv, [256, 1, 1]],                 #52
   [-1, 1, nn.Upsample, [None, 2, 'nearest']],      #53
   [37, 1, Conv, [256, 1, 1]], # route backbone P4  54
   [[-1, -2], 1, Concat, [1]],             #55

   [-1, 1, Conv, [256, 1, 1]],          #56
   [-2, 1, Conv, [256, 1, 1]],          #57
   [-1, 1, Conv, [128, 3, 1]],             #58
   [-1, 1, Conv, [128, 3, 1]],          #59
   [-1, 1, Conv, [128, 3, 1]],        #60
   [-1, 1, Conv, [128, 3, 1]],      #61
   [[-1, -2, -3, -4, -5, -6], 1, Concat, [1]],         #62 原本是[[-1, -2, -3, -4, -5, -6], 1, Concat, [1]],
   [-1, 1, Conv, [256, 1, 1]], # 63         87-94  ELAN‘

   [-1, 1, Conv, [128, 1, 1]],           #64
   [-1, 1, nn.Upsample, [None, 2, 'nearest']],      #65
   [24, 1, Conv, [128, 1, 1]], # route backbone P3         66
   [[-1, -2], 1, Concat, [1]],                 #67

   [-1, 1, Conv, [128, 1, 1]],           #68
   [-2, 1, Conv, [128, 1, 1]],          #69
   [-1, 1, Conv, [64, 3, 1]],           #70
   [-1, 1, Conv, [64, 3, 1]],             #71
   [-1, 1, Conv, [64, 3, 1]],           #72
   [-1, 1, Conv, [64, 3, 1]],            #73
   [[-1, -2, -3, -4, -5, -6], 1, Concat, [1]],            #74        [[-1, -2, -3, -4, -5, -6], 1, Concat, [1]],
   [-1, 1, Conv, [128, 1, 1]], # 75      101-108 ELAN’



   [-1, 1, MP, []],                 #76
   [-1, 1, Conv, [128, 1, 1]],        #  77
   [-3, 1, Conv, [128,1,1]],           #78           原来是[-3, 1, SimAM, [128]],
   [-1, 1, Conv, [128, 3, 2]],             #79
   [[-1, -3, 63], 1, Concat, [1]],           #80            MP2

   [-1, 1, Conv, [256, 1, 1]],         #  81
   [-2, 1, Conv, [256, 1, 1]],          #  82
   [-1, 1, Conv, [128, 3, 1]],           #    83
   [-1, 1, Conv, [128, 3, 1]],            #84
   [-1, 1, Conv, [128, 3, 1]],             # 85
   [-1, 1, Conv, [128, 3, 1]],             # 86
   [[-1, -2, -3, -4, -5, -6], 1, Concat, [1]],         # 87         [[-1, -2, -3, -4, -5, -6], 1, Concat, [1]],
   [-1, 1, Conv, [256, 1, 1]], # 88

   [-1, 1, MP, []],               # 89
   [-1, 1, Conv, [256, 1, 1]],          #  90
   [-3, 1, SimAM, [256]],              # 91     Y原来是[-3, 1, SimAM, [256]],    [-3, 1, Conv, [256,1,1]],
   [-1, 1, Conv, [256, 3, 2]],             #  92
   [[-1, -3, 51], 1, Concat, [1]],             #   93

   [-1, 1, Conv, [512, 1, 1]],                  # 94
   [-2, 1, Conv, [512, 1, 1]],                   #95
   [-1, 1, Conv, [256, 3, 1]],            #96
   [-1, 1, Conv, [256, 3, 1]],                  # 97
   [-1, 1, Conv, [256, 3, 1]],                     #98
   [-1, 1, Conv, [256, 3, 1]],                    # 99
   [[-1, -2, -3, -4, -5, -6], 1, Concat, [1]],            # 100         [[-1, -2, -3, -4, -5, -6], 1, Concat, [1]],
   [-1, 1, Conv, [512, 1, 1]], # 101



   [75, 1, RepConv, [256, 3, 1]],           #102
   [88, 1, RepConv, [512, 3, 1]],              #103
   [101, 1, RepConv , [1024, 3, 1]],            #104

   [[102,103,104], 1,  IDetect, [nc, anchors]],   # Detect(P3, P4, P5)        105
  ]